PROMPT CREATE OR REPLACE TRIGGER trg_inc_upd_dlt_ad_tcscprlog
CREATE OR REPLACE TRIGGER trg_inc_upd_dlt_ad_tcscprlog BEFORE  INSERT OR UPDATE OR DELETE  ON tcscpr FOR EACH ROW

DECLARE

	P_ACAO       VARCHAR2(100);
	P_CHAVEPK    VARCHAR(400);
    P_CODUSU     VARCHAR2(100);


BEGIN

    P_CHAVEPK := ''||:NEW.NUMCONTRATO||'';
    P_CODUSU := TSIUSU_LOG_PKG.V_CODUSULOG;


  IF INSERTING THEN

	STP_GRAVAR_LOG_AD_TCSCPRLOG(
	'TRG_INC_UPD_DLT_AD_TCSCPRLOG'
	,P_CHAVEPK
	,'INSERT'
	,TO_CHAR(:NEW.NUMCONTRATO,'999999999999')
	,:NEW.GRUPO
	,0
	,:NEW.CODPROD
	,0
	,P_CODUSU
	,:NEW.QTDPED
	,0
	,:NEW.QTDPEDVDA
	,0
	,:NEW.QTDNEG
	,0
  ,:NEW.VALOR
  ,0
	);

  RETURN;

  ELSIF DELETING THEN

	P_CHAVEPK := ''||:NEW.NUMCONTRATO||'';

	STP_GRAVAR_LOG_AD_TCSCPRLOG(
	'TRG_INC_UPD_DLT_AD_TCSCPRLOG'
	,P_CHAVEPK
	,'DELETE'
	,TO_CHAR(:OLD.NUMCONTRATO,'999999999999')
	,0
	,:OLD.GRUPO
	,0
	,:OLD.CODPROD
	,P_CODUSU
	,0
	,:OLD.QTDPED
	,0
	,:OLD.QTDPEDVDA
	,0
	,:OLD.QTDNEG
  ,0
  ,:OLD.VALOR

	);

    RETURN;

  ELSIF UPDATING THEN

	STP_GRAVAR_LOG_AD_TCSCPRLOG(
	'TRG_INC_UPD_DLT_AD_TCSCPRLOG'
	,P_CHAVEPK
	,'UPDATE'
	,TO_CHAR(:NEW.NUMCONTRATO,'999999999999')
	,:NEW.GRUPO
	,:OLD.GRUPO
	,:NEW.CODPROD
	,:OLD.CODPROD
	,P_CODUSU
	,:NEW.QTDPED
	,:OLD.QTDPED
	,:NEW.QTDPEDVDA
	,:OLD.QTDPEDVDA
	,:NEW.QTDNEG
	,:OLD.QTDNEG
  ,:NEW.VALOR
  ,:OLD.VALOR
	);

    RETURN;
  END IF;

END;


